<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mailMapper">

	<select id="countList" resultType="int">
		SELECT 
			COUNT(*)
		FROM MAIL M
		LEFT JOIN R_MAIL R 		ON M.NO = R.MAIL_NO
		LEFT JOIN M_DRAWER D 	ON M.NO = D.MAIL_NO
		LEFT JOIN M_CATEGORY C 	ON D.CATEGORY_NO = C.NO
		WHERE
        (
        <trim prefixOverrides="OR">
        	<if test="!'받는메일함'.equals(categoryName)">
			    (
				    (SEND_USER = ${sendUser} AND (USER_NO = ${sendUser} OR USER_NO IS NULL)) 
				    AND 
				    <if test="'휴지통'.equals(categoryName)">
				    	M.DELETE_YN = 'Y'
				    </if>
				    <if test="!'휴지통'.equals(categoryName)">
				    	M.DELETE_YN = 'N'
				    </if>
				    AND
				    <if test="'임시보관함'.equals(categoryName)">
				    	M.SAVE_YN = 'Y'
				    </if>
				    <if test="!'임시보관함'.equals(categoryName)">
				    	M.SAVE_YN = 'N'
				    </if>
			    )
		    </if>
		    OR 
			<if test="!'보낸메일함'.equals(categoryName) and !'임시보관함'.equals(categoryName)">
			    (
				    (EMAIL = #{email} AND (USER_NO = ${sendUser} OR USER_NO IS NULL)) 
				    AND 
				    <if test="'휴지통'.equals(categoryName)">
				    	M.DELETE_YN = 'Y'
				    </if>
				    <if test="!'휴지통'.equals(categoryName)">
				    	M.DELETE_YN = 'N'
				    </if>
			    )
			</if>
		</trim>
        )
        <if test=" category!=null and category != '' ">
            AND
        	CATEGORY_NO = ${category}
        </if>
	</select>

	<select id="selectList" resultType="MailVo">
		SELECT 
		    	M.NO AS NO
		    ,	SEND_USER
		    ,	M.DELETE_YN AS DELETE_YN
		    ,	TITLE
		    ,	CONTENT
		    ,	SAVE_YN
		    ,	SEND_TIME
		    ,	MODIFY_TIME
		    ,	R.NO AS R_NO
		    ,	"EMAIL"
		    ,	CHECK_YN
		    ,	ALARM_YN
		    ,	R.DELETE_YN AS R_DELETE_YN
		    ,	CATEGORY_NO AS CATEGORY
		    ,	NAME AS CATEGORY_NAME
		FROM MAIL M
		LEFT JOIN R_MAIL R 		ON M.NO = R.MAIL_NO
		LEFT JOIN M_DRAWER D 	ON M.NO = D.MAIL_NO
		LEFT JOIN M_CATEGORY C 	ON D.CATEGORY_NO = C.NO
		WHERE
        (
        <trim prefixOverrides="OR">
        	<if test="!'받는메일함'.equals(categoryName)">
		    	-- 보낸메일
			    (
				    (SEND_USER = ${sendUser} AND (USER_NO = ${sendUser} OR USER_NO IS NULL)) 
				    AND 
				    <if test="'휴지통'.equals(categoryName)">
				    	M.DELETE_YN = 'Y'
				    </if>
				    <if test="!'휴지통'.equals(categoryName)">
				    	M.DELETE_YN = 'N'
				    </if>
				    AND
				    <if test="'임시보관함'.equals(categoryName)">
				    	M.SAVE_YN = 'Y'
				    </if>
				    <if test="!'임시보관함'.equals(categoryName)">
				    	M.SAVE_YN = 'N'
				    </if>
			    )
		    </if>
		    OR 
			<if test="!'보낸메일함'.equals(categoryName) and !'임시보관함'.equals(categoryName)">
				-- 받는메일
			    (
				    (EMAIL = #{email} AND (USER_NO = ${sendUser} OR USER_NO IS NULL)) 
				    AND 
				    <if test="'휴지통'.equals(categoryName)">
				    	M.DELETE_YN = 'Y'
				    </if>
				    <if test="!'휴지통'.equals(categoryName)">
				    	M.DELETE_YN = 'N'
				    </if>
			    )
			</if>
		</trim>
        )
        <if test=" category!=null and category != '' ">
            AND
        	CATEGORY_NO = ${category}
        </if>
		ORDER BY SEND_TIME DESC
	</select>

	<insert id="write">
	    <selectKey keyProperty="no" resultType="String" order="BEFORE">  
        select SEQ_MAIL_NO.NEXTVAL FROM dual
     	</selectKey>
		INSERT INTO MAIL
		VALUES
		(
			${no},
			${sendUser},
			'N',
			<if test=" saveYn.equals('작성하기') ">
			'N',
			</if>
			<if test=" saveYn.equals('임시저장') ">
			'Y',
			</if>
			#{title},
			#{content},
			SYSDATE,
			SYSDATE
		)
	</insert>
	
	<update id="send">
		insert all
		<foreach collection="sender" item="email" separator=" ">
		into r_mail
		(
			no,
			mail_no,
			email,
			check_yn,
			alarm_yn
		)
		VALUES
		(
			get_seq_no('seq_r_mail_no'),
			${no},
			#{email},
			'N',
			'N'
		)
		</foreach>
		select * from dual
	</update>

	<select id="selectOne" resultType="MailVo">
		select *
		from mail
		where no = ${no}
	</select>

	<update id="updateRead">
		update r_mail
		set check_yn = 'Y'
		where no
	</update>
	
	<insert id="createCategory">
		insert into m_category
		values
		(
			seq_m_category_no.nextval,
			${no},
			#{category}
		)
	</insert>
	
	<select id="categoryList" resultType="Map">
		select no, name from m_category
		where user_no = ${no}
	</select>

    
</mapper>